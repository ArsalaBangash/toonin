version: 2.1
jobs:
  Build-App:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Installing app dependencies
          command: |
            npm --prefix ./client install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Building App
          command: |
            npm --prefix ./client run build
  Deploy-App:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
         name: Build Docker image
         command: docker build -t toonin/client:$CIRCLE_SHA1 .
      - run:
          name: Setup Heroku
          command: |
            chmod +x .circleci/setup-heroku.sh
            .circleci/setup-heroku.sh
      - run:
          name: Deploy to Heroku
          command: |
             docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
             docker tag toonin/client:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME/web
             heroku container:login
             heroku container:push web
             heroku container:release web
workflows:
  version: 2
  Validate_Build:
    jobs:
      - Build-App
      - Deploy-App:
          requires:
            - Build-App
          filters:
            branches:
              only: 
                - master
                - heroku
notify:
  webhooks:
    - url: https://outlook.office.com/webhook/04e18692-6efb-49e9-9028-139bf917ab16@78aac226-2f03-4b4d-9037-b46d56c55210/CircleCI/30437ffdcb3e400baa80214e81552edc/5b046f8c-07ba-4e2f-a006-653143830ede
