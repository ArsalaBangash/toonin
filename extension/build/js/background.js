!function(e){var o={};function n(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=o,n.d=function(e,o,t){n.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:t})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(o,"a",o),o},n.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},n.p="",n(n.s=1)}([function(e,o,n){"use strict";var t=function(e,o){var n=e.match(o);return n&&2==n.length?n[1]:null},r=function(e,o){for(var n=e.split(" "),t=new Array,r=0,i=0;i<n.length;i++)3===r&&(t[r++]=o),n[i]!==o&&(t[r++]=n[i]);return t.join(" ")},i=function(e,o){for(var n=e[o].split(" "),r=e.length-1;r>=0;r--){var i=t(e[r],/a=rtpmap:(\d+) CN\/\d+/i);if(i){var c=n.indexOf(i);-1!==c&&n.splice(c,1),e.splice(r,1)}}return e[o]=n.join(" "),e};e.exports={preferOpus:function(e){for(var o=e.split("\r\n"),n=0;n<o.length;n++)if(-1!==o[n].search("m=audio")){var c=n;break}if(null===c)return e;for(n=0;n<o.length;n++)if(-1!==o[n].search("opus/48000")){var a=t(o[n],/:(\d+) opus\/48000/i);a&&(o[c]=r(o[c],a));break}return e=(o=i(o,c)).join("\r\n")}}},function(e,o,n){"use strict";var t,r,i,c=n(0),a=(t=c)&&t.__esModule?t:{default:t};var s,d,u={audio:!0};function l(){chrome.tabs.executeScript({file:"js/lib/socket.io.js"},f)}function f(){chrome.tabs.executeScript({file:"js/inject.js"},function(){chrome.runtime.lastError?console.error(chrome.runtime.lastError.message):console.log("All scripts successfully loaded")})}chrome.runtime.onConnect.addListener(function(e){d=e,e.onMessage.addListener(function(e){"init"==e.type&&g.emit("create room",e.roomName)})}),chrome.tabs.onUpdated.addListener(function(e,o){o.mutedInfo&&e===s&&(window.audio.muted=o.mutedInfo.muted)}),chrome.browserAction.onClicked.addListener(function(){console.log("Starting Toonin Script Injection"),chrome.tabs.executeScript({file:"js/lib/adapter.js"},l)}),console.log("application script running");var m,p,g=io("http://www.toonin.ml:8100"),h={},w={iceServers:[{urls:["stun:stun.l.google.com:19302","stun:stun2.l.google.com:19302","stun:stun3.l.google.com:19302","stun:stun4.l.google.com:19302"]}]},C={offerToReceiveAudio:1};function v(e){console.log("Starting new connection for peer: "+e);var o,n=new RTCPeerConnection(w);o=new AudioContext,o.createGain().connect(o.destination),i=o.createMediaStreamSource(m),r=o.createMediaStreamDestination(),i.connect(r),n.addTrack(r.stream.getAudioTracks()[0]),h[e].rtcConn=n,console.log(h),h[e].rtcConn.onicecandidate=function(o){o.candidate?(h[e].iceCandidates.push(o.candidate),g.emit("src new ice",{id:e,room:p,candidate:o.candidate})):console.log("No candidate for RTC connection")},n.createOffer(C).then(function(o){a.default.preferOpus(o.sdp),n.setLocalDescription(new RTCSessionDescription(o)).then(function(){h[e].localDesc=o,g.emit("src new desc",{id:e,room:p,desc:o})})})}g.on("room created",function(e){console.log("New room created with ID: "+e),p=e,d.postMessage({type:"roomID",roomID:e}),chrome.tabCapture.capture(u,function(e){if(e){chrome.tabs.query({active:!0,currentWindow:!0},function(e){var o=e[0];o&&(s=o.id)});var o=e.getAudioTracks(),n=new MediaStream(o);window.audio=document.createElement("audio"),window.audio.srcObject=n,window.audio.play(),m=n,console.log("Tab audio captured. Now sending url to injected content script")}else console.error("Error starting tab capture: "+(chrome.runtime.lastError.message||"UNKNOWN"))})}),g.on("peer joined",function(e){console.log("New peer has joined the room"),h[e.id]={id:e.id,room:e.room,iceCandidates:[]},v(e.id)}),g.on("peer ice",function(e){console.log("Ice Candidate from peer: "+e.id+" in room: "+e.room),console.log("Ice Candidate: "+e.candidate),p==e.room&&e.id in h?h[e.id].rtcConn.addIceCandidate(new RTCIceCandidate(e.candidate)).then(console.log("Ice Candidate added successfully for peer: "+e.id)).catch(function(e){console.log("Error on addIceCandidate: "+e)}):console.log("Ice Candidate not for me")}),g.on("peer desc",function(e){console.log("Answer description from peer: "+e.id+" in room: "+e.room),console.log("Answer description: "+e.desc),p==e.room&&e.id in h?h[e.id].rtcConn.setRemoteDescription(new RTCSessionDescription(e.desc)).then(function(){console.log("Remote description set successfully for peer: "+e.id)}).catch(function(e){console.log("Error on setRemoteDescription: "+e)}):console.log("Answer Description not for me")})}]);